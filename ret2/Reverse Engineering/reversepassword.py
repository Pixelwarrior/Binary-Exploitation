# ret2 course
def imul_32bit(a, b):
    result = a * b
    result &= 0xFFFFFFFF
    if result & 0x80000000:
        result = -((~result + 1) & 0xFFFFFFFF)
    return result
def main():
    encrypted_pass = ''
    encrypted_pass_hex = [ord(c) for c in encrypted_pass]
    for i in range(len(encrypted_pass_hex)):
        eax_imul = imul_32bit(i, 0x54)
        xor = encrypted_pass_hex[i] ^ eax_imul
        password_c = chr(xor & 0xFF)
        print(password_c, end='')
if __name__ == '__main__':
    main()
